name: it-with-arq-payara-managed

on:
  push:
    paths-ignore:
      - "docs/**"
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  it-with-arq-payara-managed:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
#      - uses: AdoptOpenJDK/install-jdk@v1
#        with:
#          version: '11'
#          architecture: x64
#      - name: Set up JDK
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'zulu'
#          java-version: '11'
#       - run: |
#           download_url="https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.10%2B9/OpenJDK11U-jdk_x64_linux_hotspot_11.0.10_9.tar.gz"
#           wget -O $RUNNER_TEMP/java_package.tar.gz $download_url
#       - uses: actions/setup-java@v2
#         with:
#           distribution: 'jdkfile'
#           jdkFile: ${{ runner.temp }}/java_package.tar.gz
#           java-version: '11.0.0'
#           architecture: x64
      # Install SDKMAN:
      - run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          # Install Java 11:
          sdk install java `sdk list java | grep -E "11.[0-9]*.[0-9]*-zulu" | head -1 | awk '{print $NF}'`
          # Set JAVA_HOME:
          export JAVA_HOME=$HOME/.sdkman/candidates/java/current

      - run: java -version
      - name: Start up databases via Docker Compose
        run: |
          docker-compose up -d postgres
          docker ps -a

      - name: Cache Maven packages
        uses: actions/cache@v2.1.4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

#       - name: Run integration test with -Parq-payara-managed
#         run: mvn clean verify -Parq-payara-managed
      - name: Run integration test with -Parq-payara-managed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn clean verify  -Parq-payara-managed,coverage jacoco:report \
          org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=$SONAR_TOKEN \
          -Dsonar.organization=hantsy \
          -Dsonar.projectKey=hantsy_cargotracker \
          -Dsonar.coverage.exclusions=**/dto/*
